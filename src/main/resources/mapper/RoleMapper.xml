<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pp.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.pp.entity.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="rolename" property="rolename" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, rolename, remark, create_time, create_by
  </sql>
  <select id="getRoles" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id in (
    	select role_id from t_user_role where user_id = #{userId,jdbcType=BIGINT}
    )
    order by id
  </select>
  <select id="selectByName" resultMap="BaseResultMap" parameterType="string" >
    select 
    <include refid="Base_Column_List" />
    from t_role
    where rolename = #{rolename,jdbcType=BIGINT}
  </select>  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAllCount" resultType="int" parameterType="map" >
    SELECT
		count(*)
	FROM t_role
  </select>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="map" >
    SELECT
		<include refid="Base_Column_List" />
	FROM t_role
	ORDER BY id
	<if test="offset != null and limit != null" >
	    LIMIT #{offset} , #{limit}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" parameterType="com.pp.entity.Role" >
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rolename != null" >
        rolename,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
        create_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>      
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      	now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pp.entity.Role" >
    update t_role
    <set >
      <if test="rolename != null" >
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pp.entity.Role" >
    update t_role
    set rolename = #{rolename,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>